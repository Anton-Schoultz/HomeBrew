#ifdef hide
.NOLIST
#endif

#if (($/256)>=PG_ROM) & (($/256)<PG_KEY)
;=================================================================== LET ==============
;*  X_Let                LET <var> = <expr>
;*
_Let 		= $

; for now, simple vars are stored in VARNUM (fixed in memory)
 		;--

;----------------------------------------------- X_Let
X_Let: ; LET <var> = <expr>
 		jsr 	ChrRd 		; consume LET
; 		sta 	TOKNO 		; save variable token

X_LetDo 	CASE(T_NumVar,X_Let10)
 		ERROR(ERR_VAR) 		; "Expected Variable"
X_Let10 	;- assign integer variable (not-ary)
 		jsr 	ChrRd 		; get first char of variable name
 		bpl 	X_Let90 	; long var name
 		;-- short name, character is used as index
 		and 	#$1F
 		pha 			; push the index
 		jsr 	ChrRd 		; move to after the var name (should be '=')
 		lda 	#T_EQ 		; '=' TOKEN
 		jsr 	Match 		; check for and skip over '='

 		;-- evaluate the expression
 		jsr 	EvNumeric 	; evaluate expression, result in NUM_A
 		;-- recal the index, math module multiplies for size
 		pla
 		sta 	VARID 		; save the Var index
 		jsr 	NumSet 		; fetch & store
 		RTN_T() 		; done

X_Let90 	ERROR(ERR_BADVAR)


.echo "  _LET\t\t"
.echo $-_Let
.echo "\n"
.nolist
#endif

;----------------------------------------------- keyword
#if ($/256) = PG_KEY
.list
W_Let 		.DB 	"LE",'T'+$80
.nolist
#endif
;----------------------------------------------- run
#if ($/256) = PG_RUN
.list
T_Let 		= LOW($)+$80
.DW 	X_Let
.nolist
 		;-- .export T_Let
#endif
.list 					; end of LET
