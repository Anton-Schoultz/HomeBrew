#ifdef hide
.NOLIST
#endif

#if BLD == BLD_CODE
;=================================================================== LINENO ==============
;
; {LineNo} [*..] 00
;
;*  L_LineNo            list LineNo
;*  NumX10              LNNUM *= 10 (preserves AXY) - destorys NUMTMP
;*  P_LineNo            Parse LineNo
;*  X_LineNo            Get LNNUM & Set up NXTLN
;*

_LineNo 	= $

;----------------------------------------------- P_LineNo
P_LineNo: ; Parse LineNo
 		ZSET(LNNUM,0) 		; zero line number

 		;-- parse the line number into LNNUM
P_LineNo1 	JSR 	IsDigit 	; messes with A
 		BCS 	P_LineNo2 	; no more digits
 		;-- LNNUM *= 10 (preserves AXY) - destroys NUMTMP
 		JSR 	NumX10
 		;-- digit value into NUMTMP
 		AND 	#$0F
 		STA 	NUMTMP
 		LDA 	#0
 		STA 	NUMTMP+1
 		ZADD(LNNUM,NUMTMP) 	; add it in
 		JSR 	RdCh 		; next character
 		BRA 	P_LineNo1
P_LineNo2 	;-- have line number
 		;-- write token
 		LDA 	#T_LineNo 	; token for LineNo
 		JSR 	ChrWr 		; output it
 		;-- write line number
 		LDA 	LNNUM
 		JSR 	ChrWr
 		LDA 	LNNUM+1
 		JSR 	ChrWr
 		;-- place holder for the length
 		LDA 	#$AA
 		JSR 	ChrWr
 		;--
 		RTS

;----------------------------------------------- NumX10
NumX10: ; LNNUM *= 10 (preserves AXY) - destorys NUMTMP
 		PHA
 		ZCPY(NUMTMP,LNNUM) 	; TMP = NUM
 		ZSL(LNNUM) 		; NUM * 2
 		ZSL(LNNUM) 		; NUM * 4
 		ZADD(LNNUM,NUMTMP) 	; TMP = NUM *5
 		ZSL(LNNUM) 		; LNNUM = num * 10
 		PLA
 		RTS

;----------------------------------------------- L_LineNo
L_LineNo: ; list LineNo
; ChrRd will get first byte afer the token
 		JSR 	X_LineNo 	; Get LNNUM & Set up NXTLN
 		;-- output line no
 		lda LNNUM
 		sta NUMTMP
 		lda LNNUM+1
 		sta NUMTMP+1
 		lda #0
 		sta NUMTMP+2		; U=0
 		;
 		JSR 	PrNum
 		LDA 	#' '
 		JSR 	PrCh
 		;-- jump to continue listing
 		JMP 	ListLn


; when executing, token into X, jmp(TblRun,X) comes here
; ZRd points to first byte after the token

;    0   1 2 3 4
; [LnNo] L H s xxxxxxx
; L=Lo Line number
; H=Hi Line Number
; s=length of line (exluding LineNo stuff)

;----------------------------------------------- X_LineNo
X_LineNo: ; Get LNNUM & Set up NXTLN
 		;-- save line no
 		JSR 	ChrRd
 		STA 	LNNUM
 		JSR 	ChrRd
 		STA 	LNNUM+1
 		;-- get length
 		JSR 	ChrRd
 		;-- Now ZRd points to the first char of the line [4]
 		CLC
 		ADC 	ZRd
 		STA 	NXTLN
 		LDA 	#0
 		ADC 	ZRd+1
 		STA 	NXTLN+1
 		;--
 		RTS




.echo $-_LineNo
.echo " Bytes in _LineNo\n"
.nolist
#endif

;----------------------------------------------- keyword
#if BLD = BLD_KEYWORD
.list
W_LineNo 	.DB 	$80
.nolist
#endif

;----------------------------------------------- parse
#if BLD = BLD_TBL_PARSE
.list
.dw P_LineNo
.nolist
#endif

;----------------------------------------------- list
#if BLD = BLD_TBL_LIST
.list
.dw L_LineNo
.nolist
#endif

;----------------------------------------------- run
#if BLD = BLD_TBL_RUN
.list
T_LineNo 	.DW 	X_LineNo
.nolist
.export T_LineNo
#endif
