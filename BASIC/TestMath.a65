; Math Development
_DB_NUM 	= 1
_DBUG 		= 1
;=================================================================== MATH TEST ========
;*  Test                 test maths
;*

#include "Constants.a65"

; MATH_MOD_NONE 0
; MATH_MOD_S16 1
; MATH_MOD_S24 2

MathModule 	= MATH_MOD_S16

#include "Macros.a65"
#include "_Vars.a65"


.org $E000
 		;-- init cpu stack and modes
 		sei 			; Halt IRQs
 		ldx 	#$ff 		; Set Stack pointer
 		txs
 		cld 			; Binary mode
 		;--
 		jsr 	ChrInit 	; Copy code to ZPpg for ChrRd
 		jsr 	NumInit 	; init calc stack pointer

 		;-- go do the test
 		jmp 	Test

P_A 		.DB 	"1234",0 	;00 00 04D2
P_B	 	.DB 	"4567",0 	;00 12 D687
P_1		.db "0",0

ListLn:  	rts
Main:  		HALT()

#include "ChrStr.a65"
#include "ConSim.a65"
#include "Util.a65"
#include "Error.a65"

#include "Math.a65"

;----------------------------------------------- Test
Test: ; test maths

		;PR_ZSPC_ON()
		;PR_ZSUP_ON()

 		jsr 	TestParse	; 1234567		12d687

 		jsr	NumCvt
 		jsr	NumFmt

 		LDAX(NUM_BUF)
 		jsr	PrStrAX

 		HALT()

TestParse:
 		ZSET(ZParse,P_1)	; 1
 		jsr 	NumParsePtr

		rts


 		ZSET(ZParse,P_B)	; 4567
 		jsr 	NumParsePtr
 		jsr 	NumPushA
 		ZSET(ZParse,P_A)	; 1234
 		jsr 	NumParsePtr
 		jsr 	NumPopB

 		;jsr 	NumAdd		;    5801
 		;jsr 	NumSub		;    3333
 		jsr 	NumMul		; 5635678
 		;jsr 	NumDiv		; 	3 r 865
 		;jsr 	NumMod		; 	3 r 865

 		rts

.export NUM_BUF



.end
