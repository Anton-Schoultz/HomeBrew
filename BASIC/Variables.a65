;=================================================================== VARIABLES ========
;*  VarList              List a variable specifier
;*  VarParse             Parse variable spec from source
;*
;
#ifdef hide 				;Variables
.NOLIST
#endif
.list
;                 1111111111111111
; 0123456789ABCDEF0123456789ABCDEF
; @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
 		;--
; $5B 91 [x=27]  [


; Value tokens 1111.1kta
; k:0=Variable		k:1=Constant/literal
; t:0=Numeric		t:1=String
; a:0=Simple		a:1=Array
 		;--
;                  FF			;ff
;  T_StrLit 	= $FE 			;fe "x" Lit,Alpha, -
;                  FD			;fd 123	Lit,Num  , -
;  T_NumLit 	= $FC 			;fc 123	Lit,Num  , -
 		;--
;  T_StrAry 	= $FB 			;fb A$(	Var,Alpha,Array
;  T_StrVar 	= $FA 			;fa A$	Var,Alpha,Single
 		;--
;  T_NumAry 	= $F9 			;f9 A(	Var,Num  ,Array
;  T_NumVar 	= $F8 			;f8 A	Var,Num  ,Single
 		;--
 		;--

;  VARID
; 76543210
; ...aaaaa	bottom 5 bits of first char (0-31 0=@,1=A,...)
; 1.......	This is the last character of the variable Name
; .#......	Variable is an array
 		;--

_Variables 	= $

;----------------------------------------------- VarParse
VarParse: ; Parse variable spec from source
; ZRd points at the initial alpha char
 		lda 	#T_NumVar
 		sta 	TOKNO
 		ldy 	#$FF
; scan forward (with Y) for non-alpha/num
VarPL 		iny
 		lda 	(ZRd),y
 		jsr 	IsAlphaNumeric
 		BR_T(VarPL) 		; end, output & copy name

; finished reading chars
 		dey 			; back up to last char
 		;-- set it's high bit on
 		lda 	(ZRd),y
 		ora 	#$80
 		sta 	(ZRd),y
 		sta 	VARID 		; save the marked char
 		;-- back to following char
 		iny
 		lda 	(ZRd),y

; if '$' then set Str bit1 and move on
 		cmp 	#'$'
 		bne 	VarP1
 		SMB1 	TOKNO 		; set STR bit1
 		iny
 		lda 	(ZRd),y

VarP1 		; if '(' then set Ary bit0 and move on
 		cmp 	#'('
 		bne 	VarP2
 		SMB0 	TOKNO 		; set ARY bit0
; 		iny
; 		lda 	(ZRd),y

VarP2 		; output Token from VARID
 		lda 	TOKNO
 		jsr 	ChrWr 		; output token

 		;-- fetch 1st char again (may have had bit 7 set)
 		ldy 	#0
 		lda 	(ZRd),y
 		sta 	CHRGOT

VarP3 		jsr 	ChrWr 		; output first varname char
 		lda 	CHRGOT
 		bmi 	VarPMod 	; if only the one go do $(

VarP4 		jsr 	ChrRd
 		bne 	VarP3
 		rts

VarPMod 	jsr 	ChrRd
 		BR_AEQ('(',VarPMod) 	; read over ( $
 		BR_AEQ('$',VarPMod)

VarPXX 		rts

;----------------------------------------------- VarList
VarList: ; List a variable specifier
 		;-- sta 	TOKNO		; save he var token F8..FF already there
 		;-- List a VarName
ListVarL 	jsr 	ChrRd 		; read name character
 		bmi 	ListVarStp 	; Ending character
 		jsr 	ChrOut 		; output letter
 		bra 	ListVarL 	; loop back

ListVarStp 	; last char has bit 7 set
 		and 	#$7F
 		jsr 	ChrOut 		; maskoff and output

ListVarStr 	BBR1 	TOKNO,ListVarAry ; String?
 		lda 	#'$' 		; yes, '$'
 		jsr 	ChrOut
ListVarAry 	BBR0 	TOKNO,ListVarEnd ; array ?
 		lda 	#'(' 		; yes '('
 		jsr 	ChrOut

ListVarEnd 	;- done with var name
 		jsr 	ChrRd
 		RTN_T()


#if _LEVEL >= _DETAIL
.echo "  _Variables\t"
.echo $-_Variables
.echo "\n"
#endif

.list

