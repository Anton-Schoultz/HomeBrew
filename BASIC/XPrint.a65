
#if BLD == BLD_CODE
;=================================================================== PRINT =========== 
;*  X_PrNum              convert and print number in NUM_A
;*  X_Print              code to execute the Print
;*
.list
#ifdef hide
.NOLIST
#endif

_Print 		= $

#define NONL() RMB2 ZPrFlg
#define DONL() SMB2 ZPrFlg
#define BR_NNL(tgt) BBR2 ZPrFlg,tgt


;----------------------------------------------- X_Print 
X_Print: ; code to execute the Print
 		jsr 	ChrRd 		; read next char
X_PrintL 	lda 	CHRGOT
 		beq 	X_PrEnd 	; null = done
 		jsr 	X_PrPart 	; (*1) Expand
 		bra 	X_PrintL
X_PrEnd 	;- end so new line?
 		;-- end off with Cr LF if needed
 		BR_NNL(X_PrX) 		; no cr,lf -> exit
 		jmp 	PrNL 		; output CR,LF and exit
X_PrX 		rts

; handle parts inside   (part | , | ;)*

X_PrPart 	;-- first check for comma / semi-colon
 		BR_AEQ($3B,X_PrSemi) 	; ';' =>Semi
 		BR_AEQ($2C,X_PrComma) 	; ',' =>Colon

 		;-- try as numeric expression
 		jsr 	EvNumeric
 		BR_F(X_PrStr) 		; not numeric, try string


X_PrNum: ; convert and print number in NUM_A
 		jsr 	NumCvt 		; to string
 		jsr 	NumFmt 		; handle leading zeroes
 		;-- print the string
 		LDAX(NUM_BUF)
 		jsr 	PrStrAX
 		;-- done
 		RTN_T() 		; OK

X_PrStr 	;- handle as string expression
 		jsr 	EvString
 		jsr 	StrOut
 		RTN_T()


;  -- ',' or ';' control output spacing / NL
X_PrComma 	;-- comma, do a tab, no CRLF
 		lda 	#HT 		; tab
 		jsr 	ChrOut 		; output the tab
 		;-- fall through to turn off NL, and loop back
X_PrSemi 	;-- Semicolon, no CR/LF
 		NONL()
 		jsr 	ChrRd 		; comsume ,/;
 		bra 	X_PrPart


.export X_Print

.echo "  _Print\t"
.echo $-_Print
.echo "\n"
.nolist
#endif


;----------------------------------------------- keyword 
#if BLD = BLD_KEYWORD
.list
W_Print 	.DB 	"PRIN",'T'+$80
.nolist
#endif

;----------------------------------------------- run 
#if BLD = BLD_TBL_RUN
.list
T_Print 	= LOW($)+$80
.DW 	X_Print
.nolist
.export T_Print
#endif

