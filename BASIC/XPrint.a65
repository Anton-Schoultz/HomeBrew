.list
#ifdef hide
.NOLIST
#endif

#if (($/256)>=PG_ROM) & (($/256)<PG_KEY)
.list

;=================================================================== PRINT ===========
;*  DB_Print             Debug Print values
;*  X_Print              PRINT ( <expr>|<str>| |, )*
;*

_Print 		= $

#define NONL() RMB2 ZPrFlg
#define DONL() SMB2 ZPrFlg
#define BR_NNL(tgt) BBR2 ZPrFlg,tgt


;----------------------------------------------- X_Print
X_Print: ; PRINT ( <expr>|<str>|;|, )*
 		jsr 	ChrRd 		; consume PRINT
 		DONL() 			; default end with CRLF
X_PrintL 	lda 	CHRGOT
 		beq 	X_PrEnd 	; null = done

 		jsr 	X_PrPart 	; (*1) Expand
 		BR_T(X_PrintL)

X_PrEnd 	;-- end off with Cr LF if needed
 		BR_NNL(X_PrX) 		; no cr,lf -> exit
 		jsr 	PrNL 		; output CR,LF and exit
X_PrX 		rts

X_PrComma 	;-- COMMA
 		lda 	#HT 		; tab
 		jsr 	ChrOut 		; output the tab
X_PrSemi 	;-- SEMICOLON
 		NONL()
 		jsr 	ChrRd 		; comsume ,/;
 		rts

X_PrPart 	;-- PART = ';' | ',' | string | numeric
 		;-- first check for comma / semi-colon
 		BR_AEQ($3B,X_PrSemi) 	; ';' =>Semi
 		BR_AEQ($2C,X_PrComma) 	; ',' =>Colon
 		jsr 	EvIsStr 	; EQ if A is T_StrLit,T_StrVar
 		BR_F(X_PrNum)	 	; no, treat as numeric to string

X_PrStr 	;-- STRING expression
		jsr	StrInit
 		jsr 	EvString 	; Evaluate
 		jsr 	StrOut 		; Print
 		DONL() 			; NL on

;	jsr DB_Print

 		RTN_T() 		; OK

X_PrNum 	;-- NUMERIC expresion
		jsr	NumInit
 		jsr 	EvNumeric 	; evaluate

 		jsr 	NumCvt 		; convert to string
 		jsr 	NumFmt 		; handle leading zeroes
 		LDAX(NUM_BUF) 		; print it
 		jsr 	PrStrAX

 		DONL() 			; NL on
 		RTN_T() 		; OK

#if _DB_PRINT
;=================================================================== DBUG =============
DB_Print: ; Debug Print values
 		PUSHALL()
 		jsr 	PrNL
 		PRINTLN("ZRd  Gt  ")
 		HEX_INT(ZRd)
 		HEX_SHORT(CHRGOT)
 		jsr 	PrNL
 		PULLALL()
 		PAUSE()
 		rts
#endif



.echo "  _PRINT\t"
.echo $-_Print
.echo "\n"
.nolist
#endif


;----------------------------------------------- keyword
#if ($/256) = PG_KEY
.list
W_Print 	.DB 	"PRIN",'T'+$80
.nolist
#endif

;----------------------------------------------- run
#if ($/256) = PG_RUN
.list
T_Print 	= LOW($)+$80
.DW 	X_Print
.nolist
 		;-- .export T_Print
#endif
.list 					; end of PRINT
