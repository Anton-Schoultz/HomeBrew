#ifdef hide
.NOLIST
#endif
#if (($/256)>=PG_ROM) & (($/256)<PG_KEY)
;=================================================================== IF ============== 
;*  X_If                 IF ?? THEN {Statment}~Execute statement if condition ?? is true
;*  X_IfStr              do string comparison
;*
_If 		= $

; IF {NumExpr} THEN {Statement}
; IF StrVar RelOp {StrExpr} THEN {Statement}
; IF StrLit RelOp {StrExpr} THEN {Statement}

;------------------------------------------------------- X_If 
X_If: ; IF ?? THEN {Statment}~Execute statement if condition ?? is true
 		jsr 	ChrRd 			; consume token
 		;-- check for string comparison
 		JSR 	EvIsStr
 		BR_T(X_IfStr)
 		;-- Not sting so assume numeric expression
 		jsr 	EvNumeric 		; AX lo/hi
 		jsr 	NumFlag 		; Eq=>False
 		bne 	IfTrue
 		rts 				; false return to do next line

IfTrue 		;-- result is true
 		lda 	#T_THEN
 		jsr 	Check 			; expected XX but got YY
 		;-- will ChrRd to get first token of statement
 		jmp 	RunStmnt

X_IfSyntax 	ERROR(ERR_SYNTAX)

X_IfStr: ; do string comparison
 		;-- evaluate LHS of compare
 		JSR 	EvString
 		BR_F(X_IfSyntax) 		; not a string => syntax error
 		JSR 	StrPush 		; save that result
 		;-- now get the comparison required
 		LDA 	CHRGOT 			; get the last token read
 		JSR 	IsRelOp
 		BNE 	X_IfSyntax 		; not relation => error

 		;-- push operator onto the stack
 		LDA 	CHRGOT
 		pha 				; save operator

 		;-- consume operator, get next part
 		JSR 	ChrRd 			; consume rel op
 		JSR 	EvString 		; evaluate next string
 		BR_F(X_IfSyntax) 		; not a string => syntax error
 		;-- prepare to compare the strings
 		JSR 	NumPopB 		; first string into B
 		JSR 	NumSwap 		; A <-> B
 		;-- compare
 		JSR 	StrComp

 		pla 				; recall op
 		JSR 	RelTest 		; go set true/false

; RelTest checks op in .A against NUM_FLG and sets NUM = TRUE / FALSE
; returns with .A = 0(False) or FF(True)
 		CMP 	#0 			; 0=False, else true
 		BNE 	IfTrue
 		rts



#if _LEVEL >= _KEYWORDS
.echo "  _IF\t\t"
.echo $-_If
.echo "\n"
#endif

.nolist
#endif

;------------------------------------------------------- keyword 
#if ($/256) = PG_KEY
.list
W_If 		.DB 	"I",'F'+$80
.nolist
#endif
;------------------------------------------------------- run 
#if ($/256) = PG_RUN
.list
T_If 		= LOW($)+$80
.DW 	X_If
.nolist
#endif

.list 						; end of If
