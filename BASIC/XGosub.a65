#ifdef hide
.NOLIST
#endif
#if (($/256)>=PG_ROM) & (($/256)<PG_KEY)
;=================================================================== GOSUB ============== 
;*  X_Gosub              GOSUB <NumLit>
;*  X_GosubNum           Gosub Num
;*
_Gosub 		= $

;----------------------------------------------- X_Gosub 
X_Gosub: ; GOSUB <NumLit>
 		jsr 	ChrRd 		; consume token
X_GosubNum: ; Gosub Num
 		BR_AEQ(T_NumLit,Gosub)
 		;-- Expected constant
 		ERROR(ERR_CONST)
Gosub 		;- push return line address onto RTNSTK
 		LDX 	RTNSP
 		LDA 	LN_NXT
 		STA 	RTNSTK_L
 		lda 	LN_NXT+1
 		STA 	RTNSTK_H
 		;-- bump stack pointer
 		inx
 		cmp 	#RTNSZ
 		bpl 	GosubOvr
 		STX 	RTNSP
 		;-- find the line and transfer
 		jsr 	NumRd 		; returns in A=Hi, X=Lo
 		sta 	LN_FND+1
 		stx 	LN_FND
 		jsr 	LnGo
 		;-- return will go to next line, so back up
 		ZCPY(LN_NXT,LN_ADR)
 		rts

GosubOvr 	ERROR(ERR_GOSUB)

.echo "  _GOSUB\t"
.echo $-_Gosub
.echo "\n"
.nolist
#endif

;----------------------------------------------- keyword 
#if ($/256) = PG_KEY
.list
W_Gosub 	.DB 	"GOSU",'B'+$80
.nolist
#endif
;----------------------------------------------- run 
#if ($/256) = PG_RUN
.list
T_Gosub 	= LOW($)
.DW 	X_Gosub
.nolist
 		;-- .export T_Gosub
#endif

.list 					; end of Gosub
