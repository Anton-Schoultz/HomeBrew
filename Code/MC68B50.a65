; MC68B50.a65
;
; Coms code for the MC68B50 Serial com chip
;
; the address for the chip must be defined by DEV_COM
; default coms divisor and format is set in COM_INIT (as div16, 8N2)
;
#include "MC68B50_def.a65"

;------------------------------------------------------------------- setup values here
COM_DATA	= DEV_COM			; Data transmit/receive register
COM_CTRL	= DEV_COM+1			; Control (Wr)/ Status (Rd)
;
;------------------------------------------------------------------- Reset
COM_RESET:	; Reset the serial chip
			lda #COM_RST
			sta COM_CTRL		; Set the reset bits to reset the chip

;-------------------------------------------------------------------
COM_INIT:	; Initialise the coms to div16, 8n2
			lda #(COM_DIV16 | COM_8N2)	; default for 8N2, div16

COM_FMT:	; Set coms format as per A reg
			sta COM_CTRL		; Set coms speed and format
			rts

COM_STATUS:	; Return the status of the coms chip in A
			lda	COM_CTRL		; read Status register
			rts

COM_GET:	; wait for rx data and then return it in A
			lda	COM_CTRL		; read status
			and	#COM_RDRF		; check if rcvd full
			beq	COM_GET			; none available so loop back
			; have data
COM_RX:		; fetch the data from the chip without waiting
			lda	COM_DATA		; read the data byte
			rts

COM_PUT:	; write character in A to the serial port once it's available
			pha					; Save byte to send
COM_PUT0	; available?
			lda	COM_CTRL		; get status
			and	#COM_TDRE
			beq	COM_PUT0		; wait for it to be empty
			;
			pla					; restore data byte
			;- fall through
COM_TX:		; Send A to com without waiting
			sta	COM_DATA
			rts					